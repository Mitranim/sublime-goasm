%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html

file_extensions:
  - goasm
  - s

scope: source.goasm

variables:
  ident: \b[A-Za-z_]\w*\b
  exponent: '(?:[Ee][+-]?)'

contexts:
  main:
    - match: ^#.*
      scope: comment.line.module.goasm
      set: match-any
    - match: ''
      set: match-any

  match-any:
    - include: match-comments
    - include: match-specials
    - include: match-punctuation
    - include: match-identifiers
    - include: match-numbers
    - include: match-strings
    - include: match-operators

  match-comments:
    - match: '//(?:.|\s)*'
      scope: comment.line.goasm
    - match: /\*
      push:
        - meta_scope: comment.block.goasm
        - match: \*/
          pop: true

  match-specials:
    - match: ^\s*(#)\s*(define)\b\s+({{ident}})
      scope: meta.annotation.goasm
      captures:
        1: keyword.goasm
        2: keyword.goasm
        3: entity.name.macro.goasm

    - match: ^\s*(#)\s*(\w*)
      scope: meta.annotation.goasm
      captures:
        1: keyword.goasm
        2: keyword.goasm

    - match: \@\w+
      scope: keyword.goasm

    - match: \.\w+
      scope: keyword.goasm

    # TODO use more common scopes
    - match: (\%)\w+
      scope: variable.register.goasm
      captures:
        1: punctuation.definition.register.goasm

    - match: '^\s*(\w+)\s*(:)'
      scope: meta.label.goasm
      captures:
        1: entity.name.label.goasm
        2: punctuation.definition.label.goasm

    - match: \$(?=\S)
      scope: punctuation.definition.numeric.goasm
      push:
        - match: '[+-]'
          scope: keyword.goasm
        - include: match-numbers
        - match: ''
          pop: true

    - match: ^(\S+[.·]?({{ident}}))\s+(STEXT)\b
      captures:
        1: meta.function.declaration.goasm
        2: entity.name.function.goasm
        3: keyword.goasm

    - match: ^(TEXT)\s+([^,()\[\]]*[.·]?({{ident}}))
      captures:
        1: keyword.goasm
        2: meta.function.declaration.goasm
        3: entity.name.function.goasm

    - match: '(gclocals)(·)(\h+)'
      captures:
        1: keyword.goasm
        2: punctuation.accessor.dot.middle.goasm
        3: constant.numeric.hex.goasm

    - match: ^\s+{{ident}}
      scope: keyword.goasm

    - match: ^{{ident}}
      scope: keyword.goasm

    - match: ^\s*((0x)(?:\h+\s\h+)*\h+)\s*\(([^)]*)\)\s*({{ident}})
      captures:
        1: constant.numeric.hex.goasm
        2: punctuation.definition.numeric.hexadecimal.goasm
        3: string.other.goasm
        4: keyword.goasm

    - match: ^\s*((0x)(?:\h+\s\h+)*\h+)\s*(.*)
      captures:
        1: constant.numeric.hex.goasm
        2: punctuation.definition.numeric.hexadecimal.goasm
        3: comment.line.goasm

  match-identifiers:
    - match: '{{ident}}'
      scope: variable.other.goasm
      push:
        - match: \.
          scope: punctuation.accessor.dot.goasm
        - match: \·
          scope: punctuation.accessor.dot.middle.goasm
        - match: '{{ident}}'
          scope: variable.other.goasm
        - match: ''
          pop: true

  match-numbers:
    - include: match-floats
    - include: match-hex-integers
    - include: match-decimal-integers

  match-floats:
    - match: (f\d+)(\.)\h+({{exponent}}?)\h+
      scope: constant.numeric.float.goasm
      captures:
        1: storage.type.goasm
        2: punctuation.separator.decimal.goasm
        3: punctuation.separator.exponent.goasm

    - match: \d*(\.)\d*({{exponent}}?)\d+
      scope: constant.numeric.float.goasm
      captures:
        1: punctuation.separator.decimal.goasm
        2: punctuation.separator.exponent.goasm

  match-hex-integers:
    - match: ([iu]\d+)(\.)\h+
      scope: constant.numeric.hex.goasm
      captures:
        1: storage.type.goasm
        2: punctuation.accessor.dot.goasm

    - match: (0[Xx])\h+
      scope: constant.numeric.hex.goasm
      captures:
        1: punctuation.definition.numeric.hexadecimal.goasm

  match-decimal-integers:
    - match: \d+
      scope: constant.numeric.integer.goasm

  match-strings:
    - match: '"'
      scope: punctuation.definition.string.begin.goasm
      push:
        - meta_scope: string.quoted.double.goasm
        - match: '"'
          scope: punctuation.definition.string.end.goasm
          pop: true

  match-punctuation:
    - match: \,
      scope: punctuation.separator.goasm

    - match: \.
      scope: punctuation.accessor.dot.goasm

    - match: \·
      scope: punctuation.accessor.dot.middle.goasm

    - match: \(
      scope: punctuation.section.parens.begin.goasm
    - match: \)
      scope: punctuation.section.parens.end.goasm

    - match: \[
      scope: punctuation.section.brackets.begin.goasm
    - match: \]
      scope: punctuation.section.brackets.end.goasm

    - match: \{
      scope: punctuation.section.braces.begin.goasm
    - match: \}
      scope: punctuation.section.braces.end.goasm

    - match: (\\)\s*$
      scope: markup.raw.goasm
      captures:
        1: punctuation.terminator.goasm

  # Copied from Go with some additions, probably too permissive
  match-operators: [
    {match: \!=  , scope: keyword.operator.goasm},
    {match: \!   , scope: keyword.operator.goasm},
    {match: \%=  , scope: keyword.operator.goasm},
    {match: \%   , scope: keyword.operator.goasm},
    {match: \&&  , scope: keyword.operator.goasm},
    {match: \&=  , scope: keyword.operator.goasm},
    {match: \&^= , scope: keyword.operator.goasm},
    {match: \&^  , scope: keyword.operator.goasm},
    {match: \&   , scope: keyword.operator.goasm},
    {match: \*=  , scope: keyword.operator.goasm},
    {match: \*   , scope: keyword.operator.goasm},
    {match: \+\+ , scope: keyword.operator.goasm},
    {match: \+=  , scope: keyword.operator.goasm},
    {match: \+   , scope: keyword.operator.goasm},
    {match: --   , scope: keyword.operator.goasm},
    {match: -=   , scope: keyword.operator.goasm},
    {match: \-   , scope: keyword.operator.goasm},
    {match: /=   , scope: keyword.operator.goasm},
    {match: /    , scope: keyword.operator.goasm},
    {match: :=   , scope: keyword.operator.goasm},
    {match: <>   , scope: keyword.operator.goasm},
    {match: <-   , scope: keyword.operator.goasm},
    {match: <    , scope: keyword.operator.goasm},
    {match: <<=  , scope: keyword.operator.goasm},
    {match: \<<  , scope: keyword.operator.goasm},
    {match: <=   , scope: keyword.operator.goasm},
    {match: ==   , scope: keyword.operator.goasm},
    {match: \=   , scope: keyword.operator.goasm},
    {match: \>=  , scope: keyword.operator.goasm},
    {match: \>>= , scope: keyword.operator.goasm},
    {match: \>>  , scope: keyword.operator.goasm},
    {match: \>   , scope: keyword.operator.goasm},
    {match: \^=  , scope: keyword.operator.goasm},
    {match: \^   , scope: keyword.operator.goasm},
    {match: \|=  , scope: keyword.operator.goasm},
    {match: \|\| , scope: keyword.operator.goasm},
    {match: \|   , scope: keyword.operator.goasm},
    {match: \@>  , scope: keyword.operator.goasm},
  ]
